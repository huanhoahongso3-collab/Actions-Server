name: CI
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Run at minute 0 past hour 0 UTC every day.
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 1440 # Set job timeout to 24 hours (1 day)
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags
          token: ${{ secrets.FINE_GRAINED_PAT }} # Use fine-grained PAT for checkout
      - name: Set up OpenJDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Debug - List directory contents
        run: ls -la
      - name: Run Spigot with 30-second commits and workflow deletion
        # This condition ensures the step doesn't run if the commit message already contains "Auto commit every 30 seconds"
        # to prevent an infinite loop of workflow triggers from self-commits.
        if: "!contains(github.event.head_commit.message, 'Auto commit every 30 seconds')"
        env:
          FINE_GRAINED_PAT: ${{ secrets.FINE_GRAINED_PAT }}
          REPO: ${{ github.repository }} # GITHUB_REPOSITORY is also available automatically
        run: |
          # Define maximum runtime for the server within this workflow run (in seconds)
          # Server will run for approximately 23 hours and 55 minutes before a final commit and termination.
          MAX_RUNTIME_SECONDS=$((23 * 3600 + 55 * 60)) # 23 hours and 55 minutes


          # Start playit agent in background
          echo "Starting playit agent..."
          ./playit-linux-amd64 --secret dba8668ae0b663e88ff9da28add6b73bee79dc86697bc897614a4906e4fd21d2 &
          PLAYIT_PID=$!
          echo "Playit agent started with PID $PLAYIT_PID."

          # Download Minecraft server JAR
          LINK="https://api.papermc.io/v2/projects/paper/versions/1.20.1/builds/196/downloads/paper-1.20.1-196.jar"
          JAR="${LINK##*/}"
          echo "Downloading $JAR from $LINK..."
          wget "$LINK" -O "$JAR"

          # Accept EULA (End User License Agreement) for Minecraft server
          echo "eula=true" > eula.txt

          # Start Minecraft server in background
          echo "Starting Minecraft server ($JAR)..."
          java -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -Dusing.aikars.flags=https://mcflags.emc.gs -Daikars.new.flags=true -Xms16G -Xmx16G -jar "$JAR" nogui 2>&1 | sed '/login:/s/.*/<REDACTED>/' &
          SPIGOT_PID=$!
          echo "Minecraft server started with PID $SPIGOT_PID"

          # Give the server some time to start and generate initial files
          echo "Waiting 60 seconds for server to initialize and generate files..."
          sleep 60

          # Function to commit and push changes
          commit_and_push() {
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add -A # Stage all changes
            # `|| echo "No changes to commit"` prevents the workflow from failing if there are no changes.
            git commit -m "Auto commit every 30 seconds" || echo "No changes to commit"
            # Use GITHUB_REPOSITORY for the repository name, which is a standard GitHub Actions environment variable.
            git push https://x-access-token:${FINE_GRAINED_PAT}@github.com/${GITHUB_REPOSITORY}.git HEAD:main
          }

          # Function to delete auto-commit workflow runs
          delete_auto_commit_workflows() {
            # Ensure `jq` is installed for JSON parsing. GitHub Actions runners usually have it.
            workflow_ids=$(curl -s -H "Authorization: token $FINE_GRAINED_PAT" \
              "https://api.github.com/repos/${REPO}/actions/runs" | \
              jq '.workflow_runs[] | select(.head_commit.message | contains("Auto commit every 30 seconds")) | .id')

            for id in $workflow_ids; do
              echo "Deleting workflow run $id"
              curl -s -X DELETE -H "Authorization: token $FINE_GRAINED_PAT" \
                "https://api.github.com/repos/${REPO}/actions/runs/$id"
            done
          }

          # Loop to commit and delete workflows every 30 seconds
          START_TIME=$(date +%s)
          while true; do
            CURRENT_TIME=$(date +%s)
            ELAPSED_TIME=$((CURRENT_TIME - START_TIME))

            if [ "$ELAPSED_TIME" -ge "$MAX_RUNTIME_SECONDS" ]; then
              echo "Maximum runtime of $MAX_RUNTIME_SECONDS seconds reached. Performing final commit and terminating server."
              commit_and_push # Perform a final commit before exiting the loop
              break
            fi

            sleep 30
            commit_and_push
            delete_auto_commit_workflows
            
            # Check if processes are still running
            # `kill -0 $SPIGOT_PID` sends signal 0, which checks if the process exists without killing it.
            if ! kill -0 $SPIGOT_PID 2>/dev/null; then
              echo "Spigot process has finished. Terminating the workflow."
              break
            fi
            if ! kill -0 $PLAYIT_PID 2>/dev/null; then
              echo "Playit process has finished. Terminating the workflow."
              break
            fi
          done

          # Add a 2-minute grace period after server termination
          echo "Server terminated. Waiting 2 minutes for the next action to be ready..."
          sleep 120
          echo "Grace period finished. Workflow job completing."
